AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy SecurityGroups
#----------------------------------------------
Parameters:
  #------------------
  Environment:
    Type: String
    AllowedPattern: "[a-zA-Z0-9=-@+?[?]?<?>._]*"
    ConstraintDescription: Can contain only ASCII characters.
    Description: (required) Environment name

#----------------------------------------------
Resources:
  #------------------ Security Groups
  #--
  ProxySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${Environment}-HighAuthProxySG
      GroupDescription: For Proxy Instances
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-VpcId
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-ProsySG
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 3128
          ToPort: 3128
          SourceSecurityGroupId: !Ref HighAuthSG
        -
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  #--
  HighAuthSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${Environment}-HighAuthSG
      GroupDescription: For HighAutority Instances
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-VpcId
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-HighAuthSG
  #--
  VPCEndpointSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${Environment}-VPCEndpointSG
      GroupDescription: Allow HTTPS(443)
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-VpcId
      SecurityGroupIngress:
        -
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp:
            Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-VpcCidr
      Tags:
        - Key: Name
          Value: !Sub ${Environment}-VPCEndpointSG
  #--
  SsmEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssm
      VpcEndpointType: Interface
      PrivateDnsEnabled: yes
      SubnetIds:
        - Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-PrivateSubnet1Id
        - Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-PrivateSubnet2Id
      SecurityGroupIds: 
            - !Ref VPCEndpointSG
  Ec2MessagesEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ec2messages
      VpcEndpointType: Interface
      PrivateDnsEnabled: yes
      SubnetIds:
        - Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-PrivateSubnet1Id
        - Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-PrivateSubnet2Id
      SecurityGroupIds: 
            - !Ref VPCEndpointSG
  SsmMessagesEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: 
        Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssmmessages
      VpcEndpointType: Interface
      PrivateDnsEnabled: yes
      SubnetIds:
        - Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-PrivateSubnet1Id
        - Fn::ImportValue: !Sub ${Environment}-VpcHighAuth-PrivateSubnet2Id
      SecurityGroupIds: 
            - !Ref VPCEndpointSG





Outputs:
  #------------------ Security Group
  ProxySGId:
    Description: ProxySG Security Group Id
    Value: !Ref ProxySG
    Export:
      Name: !Sub ${AWS::StackName}-ProxySGId
  HighAuthSGId:
    Description: HighAutority Instance Security Group Id
    Value: !Ref HighAuthSG
    Export:
      Name: !Sub ${AWS::StackName}-HighAuthSGId