AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy High Autority Instances
#----------------------------------------------
Parameters:
  #------------------
  InstanceType:
    Description: (Optional) Instance type
    Type: String
    Default: t2.micro
  AmiId:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2'

#----------------------------------------------
Resources:
  #-- BastionAndHighAuthority:
  BastionAndHighAuthority:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile:
        Fn::ImportValue: EksPoc-IAM-EC2HighAuthorityRoleProfile
      Monitoring: yes
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId:
            Fn::ImportValue: EksPoc-VPC-PublicSubnet1Id
          GroupSet:
            - Fn::ImportValue: EksPoc-SG-BastionSGId
          AssociatePublicIpAddress: true
      Tags:
        - Key: Name
          Value: EksPoc-BastionAndHighAuthority
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # Update ALL rpms, and change hostname to Userfrendly name 
          yum -y update
          hostnamectl set-hostname "Bastion"
  #-- DockerDev
  DockerDev:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile:
        Fn::ImportValue: EksPoc-IAM-EC2DockerRolePlofile
      Monitoring: yes
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId:
            Fn::ImportValue: EksPoc-VPC-PublicSubnet1Id
          GroupSet:
            - Fn::ImportValue: EksPoc-SG-DockerSGId
          AssociatePublicIpAddress: true
      Tags:
        - Key: Name
          Value: EksPoc-DockerDev
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # Update ALL rpms, and change hostname to Userfrendly name 
          yum -y update
          hostnamectl set-hostname "DockerDev"
  #-- kubectl
  EksAdmin:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiId
      InstanceType: !Ref InstanceType
      IamInstanceProfile:
        Fn::ImportValue: EksPoc-IAM-EC2kubectlRolePlofile
      Monitoring: yes
      NetworkInterfaces:
        - DeviceIndex: '0'
          SubnetId:
            Fn::ImportValue: EksPoc-VPC-PublicSubnet1Id
          GroupSet:
            - Fn::ImportValue: EksPoc-SG-EksAdminSGId
          AssociatePublicIpAddress: true
      Tags:
        - Key: Name
          Value: EksPoc-EksAdmin
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # Update ALL rpms, and change hostname to Userfrendly name 
          yum -y update
          hostnamectl set-hostname "EksAdmin"



Outputs:
  #---------------- EC2 Instance
  BastionAndHighAuthorityId:
    Description: BastionAndHighAuthority Instance ID
    Value: !Ref BastionAndHighAuthority
    Export:
      Name: !Sub ${AWS::StackName}-BastionAndHighAuthorityId
  BastionAndHighAuthorityPublicIp:
    Description: BastionAndHighAuthority Public IP
    Value: !GetAtt BastionAndHighAuthority.PublicIp
    Export:
      Name: !Sub ${AWS::StackName}-BastionAndHighAuthorityPublicIp
  #--
  DockerDevId:
    Description: DockerDev Instance ID
    Value: !Ref DockerDev
    Export:
      Name: !Sub ${AWS::StackName}-DockerDevId
  DockerDevPublicIp:
    Description: DockerDev Public IP
    Value: !GetAtt DockerDev.PublicIp
    Export:
      Name: !Sub ${AWS::StackName}-DockerDevPublicIp
  #--
  EksAdminId:
    Description: EksAdmin Instance ID
    Value: !Ref EksAdmin
    Export:
      Name: !Sub ${AWS::StackName}-EksAdminId
  EksAdminPublicIp:
    Description: EksAdmin Public IP
    Value: !GetAtt EksAdmin.PublicIp
    Export:
      Name: !Sub ${AWS::StackName}-EksAdminPublicIp


      
      