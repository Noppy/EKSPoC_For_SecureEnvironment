AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy ECR Repository
#----------------------------------------------
Parameters:
  Environment:
    Type: String
    AllowedPattern: "[a-zA-Z0-9=-@+?[?]?<?>._]*"
    ConstraintDescription: Can contain only ASCII characters.
    Description: (required) Environment name
#----------------------------------------------
Resources:
  #------------------ ECR repository
  EcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      #RepositoryName: String
      #LifecyclePolicy:
      RepositoryPolicyText:
        Version: 2008-10-17
        Statement:
          -
            Sid: GetAuthorizationToken
            Effect: Allow
            Principal: 
              AWS: 
                - Fn::ImportValue: !Sub ${Environment}-Iam-DockerDevInstanceRoleArn
            Action: 
              - ecr:GetAuthorizationToken
              - ecr:DescribeRepositories
          - 
            Sid: AllowPushPull
            Effect: Allow
            Principal: 
              AWS: 
                - Fn::ImportValue: !Sub ${Environment}-Iam-DockerDevInstanceRoleArn
            Action: 
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload

      Tags: 
        -
          Key: Name
          Value: PoCEcrRepository
  #--------
  AllowPushPullEcrRepo:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: !Sub "${Environment}-AllowPutAndPullEcrRepository"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            # docker一時トークン(12時間有効)取得。GetAuthorizationTokenは、Resource未サポート
            Sid: GetAuthorizationToken
            Effect: Allow
            Action: 
              - ecr:GetAuthorizationToken
              - ecr:DescribeRepositories
            Resource: "*"
          -
            Sid: AllowPushPull
            Effect: Allow
            Action: 
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:PutImage
              - ecr:InitiateLayerUpload
              - ecr:UploadLayerPart
              - ecr:CompleteLayerUpload
            Resource:
              - !GetAtt EcrRepository.Arn
      Roles:
        - Fn::ImportValue: !Sub ${Environment}-Iam-DockerDevInstanceRoleName
  #--------
  EcrDkrEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${Environment}-Vpc-VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.dkr
      VpcEndpointType: Interface
      PrivateDnsEnabled: yes
      SubnetIds:
        - Fn::ImportValue: !Sub ${Environment}-Vpc-PrivateSubnet1Id
        - Fn::ImportValue: !Sub ${Environment}-Vpc-PrivateSubnet2Id
      SecurityGroupIds: 
        - Fn::ImportValue: !Sub ${Environment}-Vpce-VPCEndpointSGId
  EcrApiEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${Environment}-Vpc-VpcId
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.api
      VpcEndpointType: Interface
      PrivateDnsEnabled: yes
      SubnetIds:
        - Fn::ImportValue: !Sub ${Environment}-Vpc-PrivateSubnet1Id
        - Fn::ImportValue: !Sub ${Environment}-Vpc-PrivateSubnet2Id
      SecurityGroupIds: 
        - Fn::ImportValue: !Sub ${Environment}-Vpce-VPCEndpointSGId


Outputs:
  #---------------- EC2 Instance
  EcrRepositoryId:
    Description: Ecr Repository ID
    Value: !Ref EcrRepository
    Export:
      Name: !Sub ${AWS::StackName}-EcrRepositoryId
  EcrRepositoryArn:
    Description: Ecr Repository Arn
    Value: !GetAtt EcrRepository.Arn
    Export:
      Name: !Sub ${AWS::StackName}-EcrRepositoryArn